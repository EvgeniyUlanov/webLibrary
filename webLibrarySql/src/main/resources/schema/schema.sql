DROP TABLE IF EXISTS Authors CASCADE;
DROP TABLE IF EXISTS Books CASCADE;
DROP TABLE IF EXISTS Genres CASCADE;
DROP TABLE IF EXISTS Authors_books;
DROP TABLE IF EXISTS Comments;
DROP TABLE IF EXISTS Users CASCADE;
DROP TABLE IF EXISTS Roles CASCADE;
DROP TABLE IF EXISTS users_roles;

CREATE TABLE IF NOT EXISTS Authors (
  author_id SERIAL PRIMARY KEY,
  author_name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Genres (
  genre_id SERIAL PRIMARY KEY,
  genre_name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS Books (
  book_id SERIAL PRIMARY KEY,
  book_name VARCHAR(255) NOT NULL UNIQUE,
  genre_id INT REFERENCES Genres(genre_id)
);

CREATE TABLE IF NOT EXISTS Authors_books (
  author_id INT NOT NULL REFERENCES Authors(author_id) ON DELETE CASCADE,
  book_id INT NOT NULL REFERENCES Books(book_id) ON DELETE CASCADE,
  UNIQUE (author_id, book_id)
);

CREATE TABLE IF NOT EXISTS Comments (
  comment_id SERIAL PRIMARY KEY,
  comment VARCHAR(255),
  book_id INT NOT NULL REFERENCES Books(book_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS Users (
  user_id SERIAL PRIMARY KEY,
  user_name VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS Roles (
  role_id SERIAL PRIMARY KEY,
  role VARCHAR(20) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users_roles (
  user_id INT NOT NULL REFERENCES Users(user_id) ON DELETE CASCADE,
  role_id INT NOT NULL REFERENCES Roles(role_id) ON DELETE CASCADE,
  UNIQUE (user_id, role_id)
);